{"ast":null,"code":"import{initializeApp}from\"firebase/app\";import{addDoc}from\"firebase/firestore/lite\";import{getStorage}from\"firebase/storage\";import{getAnalytics}from\"firebase/analytics\";import{getFirestore,collection,getDocs,doc,updateDoc}from\"firebase/firestore/lite\";const firebaseConfig={apiKey:\"AIzaSyDVIvkrPwW76arrnIUjsGN1-jcBlfbHpWA\",authDomain:\"realestateclub-584d7.firebaseapp.com\",projectId:\"realestateclub-584d7\",storageBucket:\"realestateclub-584d7.appspot.com\",messagingSenderId:\"457631501672\",appId:\"1:457631501672:web:df25a3429bb68aecc31add\",measurementId:\"G-90QFHNY9H8\"};const app=initializeApp(firebaseConfig);const analytics=getAnalytics(app);const db=getFirestore(app);const storage=getStorage(app);// Get a list of userProfiles from databse\nasync function getUsers(){const userProfileCollection=collection(db,\"userProfile\");const userProfileDocuments=await getDocs(userProfileCollection);const userList=[];userProfileDocuments.docs.forEach(doc=>{const data=doc.data();data.id=doc.id;userList.push(data);});return userList;}// function to update firebase docs\nasync function updateUserData(id,data){console.log(id);console.log(data);const userInfo=doc(db,\"userProfile\",id);await updateDoc(userInfo,data);}async function addNewProfile(data){const userProfileCollection=collection(db,\"userProfile\");const docRef=await addDoc(userProfileCollection,data);return docRef.id;// returns the new document reference ID\n}export{getUsers,db,updateUserData,addNewProfile,storage};","map":{"version":3,"names":["initializeApp","addDoc","getStorage","getAnalytics","getFirestore","collection","getDocs","doc","updateDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","storage","getUsers","userProfileCollection","userProfileDocuments","userList","docs","forEach","data","id","push","updateUserData","console","log","userInfo","addNewProfile","docRef"],"sources":["/Users/emiller3425/realEstateClub/web/src/firebase.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { addDoc } from \"firebase/firestore/lite\";\nimport { getStorage } from \"firebase/storage\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  doc,\n  updateDoc,\n} from \"firebase/firestore/lite\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDVIvkrPwW76arrnIUjsGN1-jcBlfbHpWA\",\n    authDomain: \"realestateclub-584d7.firebaseapp.com\",\n    projectId: \"realestateclub-584d7\",\n    storageBucket: \"realestateclub-584d7.appspot.com\",\n    messagingSenderId: \"457631501672\",\n    appId: \"1:457631501672:web:df25a3429bb68aecc31add\",\n    measurementId: \"G-90QFHNY9H8\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\n\n// Get a list of userProfiles from databse\nasync function getUsers() {\n  const userProfileCollection = collection(db, \"userProfile\");\n  const userProfileDocuments = await getDocs(userProfileCollection);\n  const userList = [];\n\n  userProfileDocuments.docs.forEach((doc) => {\n    const data = doc.data();\n    data.id = doc.id;\n    userList.push(data);\n  });\n  return userList;\n}\n\n// function to update firebase docs\nasync function updateUserData(id, data) {\n  console.log(id);\n  console.log(data);\n  const userInfo = doc(db, \"userProfile\", id);\n  await updateDoc(userInfo, data);\n}\n\nasync function addNewProfile(data) {\n  const userProfileCollection = collection(db, \"userProfile\");\n  const docRef = await addDoc(userProfileCollection, data);\n  return docRef.id; // returns the new document reference ID\n}\n\nexport { getUsers, db, updateUserData, addNewProfile, storage };"],"mappings":"AAAA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,MAAM,KAAQ,yBAAyB,CAChD,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,YAAY,KAAQ,oBAAoB,CACjD,OACEC,YAAY,CACZC,UAAU,CACVC,OAAO,CACPC,GAAG,CACHC,SAAS,KACJ,yBAAyB,CAEhC,KAAM,CAAAC,cAAc,CAAG,CACnBC,MAAM,CAAE,yCAAyC,CACjDC,UAAU,CAAE,sCAAsC,CAClDC,SAAS,CAAE,sBAAsB,CACjCC,aAAa,CAAE,kCAAkC,CACjDC,iBAAiB,CAAE,cAAc,CACjCC,KAAK,CAAE,2CAA2C,CAClDC,aAAa,CAAE,cACjB,CAAC,CAEH,KAAM,CAAAC,GAAG,CAAGjB,aAAa,CAACS,cAAc,CAAC,CACzC,KAAM,CAAAS,SAAS,CAAGf,YAAY,CAACc,GAAG,CAAC,CACnC,KAAM,CAAAE,EAAE,CAAGf,YAAY,CAACa,GAAG,CAAC,CAC5B,KAAM,CAAAG,OAAO,CAAGlB,UAAU,CAACe,GAAG,CAAC,CAE/B;AACA,cAAe,CAAAI,QAAQA,CAAA,CAAG,CACxB,KAAM,CAAAC,qBAAqB,CAAGjB,UAAU,CAACc,EAAE,CAAE,aAAa,CAAC,CAC3D,KAAM,CAAAI,oBAAoB,CAAG,KAAM,CAAAjB,OAAO,CAACgB,qBAAqB,CAAC,CACjE,KAAM,CAAAE,QAAQ,CAAG,EAAE,CAEnBD,oBAAoB,CAACE,IAAI,CAACC,OAAO,CAAEnB,GAAG,EAAK,CACzC,KAAM,CAAAoB,IAAI,CAAGpB,GAAG,CAACoB,IAAI,CAAC,CAAC,CACvBA,IAAI,CAACC,EAAE,CAAGrB,GAAG,CAACqB,EAAE,CAChBJ,QAAQ,CAACK,IAAI,CAACF,IAAI,CAAC,CACrB,CAAC,CAAC,CACF,MAAO,CAAAH,QAAQ,CACjB,CAEA;AACA,cAAe,CAAAM,cAAcA,CAACF,EAAE,CAAED,IAAI,CAAE,CACtCI,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC,CACfG,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,CACjB,KAAM,CAAAM,QAAQ,CAAG1B,GAAG,CAACY,EAAE,CAAE,aAAa,CAAES,EAAE,CAAC,CAC3C,KAAM,CAAApB,SAAS,CAACyB,QAAQ,CAAEN,IAAI,CAAC,CACjC,CAEA,cAAe,CAAAO,aAAaA,CAACP,IAAI,CAAE,CACjC,KAAM,CAAAL,qBAAqB,CAAGjB,UAAU,CAACc,EAAE,CAAE,aAAa,CAAC,CAC3D,KAAM,CAAAgB,MAAM,CAAG,KAAM,CAAAlC,MAAM,CAACqB,qBAAqB,CAAEK,IAAI,CAAC,CACxD,MAAO,CAAAQ,MAAM,CAACP,EAAE,CAAE;AACpB,CAEA,OAASP,QAAQ,CAAEF,EAAE,CAAEW,cAAc,CAAEI,aAAa,CAAEd,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}